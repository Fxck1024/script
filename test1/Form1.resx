<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>